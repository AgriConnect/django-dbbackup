--- dbbackup/dbcommands.py	(original)
+++ dbbackup/dbcommands.py	(refactored)
@@ -13,6 +13,7 @@
 from django.core.management.base import CommandError
 from django.utils import timezone
 from dbbackup import settings
+import collections
 
 
 class BaseEngineSettings:
@@ -223,7 +224,7 @@
             'extension': self.settings.extension,
             'wildcard': wildcard,
         }
-        if callable(settings.FILENAME_TEMPLATE):
+        if isinstance(settings.FILENAME_TEMPLATE, collections.Callable):
             filename = settings.FILENAME_TEMPLATE(**params)
         else:
             params['datetime'] = wildcard or params['timestamp'].strftime(settings.DATE_FORMAT)
@@ -270,7 +271,7 @@
         print(self._clean_passwd("  Running: %s" % ' '.join(command)))
         env = self.settings.get_env()
         env.update(settings.BACKUP_ENVIRONMENT)
-        for k, v in env.items():
+        for k, v in list(env.items()):
             env[k] = self.translate_command(v)
         updated_osenv = os.environ.copy()
         updated_osenv.update(env)
--- dbbackup/management/commands/dbrestore.py	(original)
+++ dbbackup/management/commands/dbrestore.py	(refactored)
@@ -76,7 +76,7 @@
         if not self.filepath:
             print("  Finding latest backup")
             filepaths = self.storage.list_directory()
-            filepaths = list(filter(lambda f: f.endswith('.' + self.backup_extension), filepaths))
+            filepaths = list([f for f in filepaths if f.endswith('.' + self.backup_extension)])
             if not filepaths:
                 raise CommandError("No backup files found in: /%s" % self.storage.backup_dir)
             self.filepath = filepaths[-1]
@@ -94,7 +94,7 @@
             inputfile.close()
             inputfile = uncompressed_file
         print("  Restore tempfile created: %s" % utils.handle_size(inputfile))
-        cont = input("Are you sure you want to continue? [Y/n]")
+        cont = eval(input("Are you sure you want to continue? [Y/n]"))
         if cont.lower() not in ('y', 'yes', ''):
             print("Quitting")
             sys.exit(0)
@@ -123,7 +123,7 @@
         import gnupg
         def get_passphrase():
             print('Input Passphrase: ')
-            return input()
+            return eval(input())
         
         temp_dir = tempfile.mkdtemp(dir=dbbackup_settings.TMP_DIR)
         try:
